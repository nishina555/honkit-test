"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
const assert_1 = __importDefault(require("assert"));
const __1 = __importDefault(require("../"));
it("should gen content", function () {
    const CONTENT = fs_1.default.readFileSync(path_1.default.join(__dirname, "./fixtures/PAGE.adoc"), "utf8");
    const LEXED = __1.default.page(CONTENT);
    (0, assert_1.default)(LEXED.content);
});
it("should include file", function () {
    const result = __1.default.page(`= GitBook User Manual

== Usage

include::src/__tests__/fixtures/usage.adoc[]
`).content;
    // assert.match is available in Node > 12.16.0
    (0, assert_1.default)(result.match(/create a book/g) !== null);
});
it("should use font icons by default", function () {
    const result = __1.default.page(`= HonKit User Manual

== Install

IMPORTANT: Do not forgot to install \`yarn\`
`).content;
    // assert.match is available in Node > 12.16.0
    (0, assert_1.default)(result.match(/fa icon-important/g) !== null);
});
it("should allow users to override icons attribute", function () {
    const result = __1.default.page(`= HonKit User Manual
// override icons attribute
:icons:

== Install

IMPORTANT: Do not forgot to install \`yarn\`
`).content;
    // assert.doesNotMatch is available in Node > 12.16.0
    (0, assert_1.default)(result.match(/fa icon-important/g) === null);
});
